{"ast":null,"code":"var _jsxFileName = \"/Users/robertas.atkociunas/Desktop/Hackathon/newApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport AppHeader from \"../src/components/AppHeader\";\nimport Box from \"../src/components/Box\";\nimport AppFooter from \"../src/components/AppFooter\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // State values\n  constructor() {\n    super();\n\n    this.addTaskDaily = () => {\n      let newList = this.state.Daily;\n      newList.push({\n        task: 'New Task...',\n        done: 0\n      });\n      this.setState({\n        Daily: newList\n      });\n    };\n\n    this.addTaskDevelopment = () => {\n      let newList = this.state.Development;\n      newList.push({\n        task: 'New Task...',\n        done: 0\n      });\n      this.setState({\n        Development: newList\n      });\n    };\n\n    this.addTaskHPC = () => {\n      let newList = this.state.HPC;\n      newList.push({\n        task: 'New Task...',\n        done: 0\n      });\n      this.setState({\n        HPC: newList\n      });\n    };\n\n    this.taskDoneDaily = click => {\n      let id = click.target.id;\n      let newListDaily = this.state.Daily;\n\n      if (newListDaily[id].done) {\n        newListDaily[id].done = 0;\n      } else {\n        newListDaily[id].done = 1;\n      }\n\n      this.setState({\n        Daily: newListDaily\n      });\n    };\n\n    this.taskDoneDevelopment = click => {\n      let id = click.target.id;\n      let newListDevelopment = this.state.Development;\n\n      if (newListDevelopment[id].done) {\n        newListDevelopment[id].done = 0;\n      } else {\n        newListDevelopment[id].done = 1;\n      }\n\n      this.setState({\n        Development: newListDevelopment\n      });\n    };\n\n    this.taskDoneHPC = click => {\n      let id = click.target.id;\n      let newListHPC = this.state.HPC;\n\n      if (newListHPC[id].done) {\n        newListHPC[id].done = 0;\n      } else {\n        newListHPC[id].done = 1;\n      }\n\n      this.setState({\n        HPC: newListHPC\n      });\n    };\n\n    this.state = {\n      Daily: [{\n        task: 'Client call',\n        done: 1\n      }, {\n        task: 'Fill workday',\n        done: 0\n      }, {\n        task: 'Update Jira notes',\n        done: 1\n      }],\n      Development: [{\n        task: 'Learn CSS flexbox',\n        done: 1\n      }, {\n        task: 'Learn how to cook',\n        done: 0\n      }],\n      HPC: [{\n        task: 'Update playbook',\n        done: 0\n      }, {\n        task: 'Prepare training',\n        done: 1\n      }]\n    };\n  }\n\n  // Me trying to do stuff \n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App_boxes\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          name: 'Daily',\n          click: this.addTaskDaily,\n          list: this.state.Daily,\n          click2: this.taskDoneDaily\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          name: 'Development',\n          click: this.addTaskDevelopment,\n          list: this.state.Development,\n          click2: this.taskDoneDevelopment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          name: 'HPC',\n          click: this.addTaskHPC,\n          list: this.state.HPC,\n          click2: this.taskDoneHPC\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/robertas.atkociunas/Desktop/Hackathon/newApp/src/App.js"],"names":["React","Component","AppHeader","Box","AppFooter","App","constructor","addTaskDaily","newList","state","Daily","push","task","done","setState","addTaskDevelopment","Development","addTaskHPC","HPC","taskDoneDaily","click","id","target","newListDaily","taskDoneDevelopment","newListDevelopment","taskDoneHPC","newListHPC","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AppHeader from \"../src/components/AppHeader\";\nimport Box from \"../src/components/Box\";\nimport AppFooter from \"../src/components/AppFooter\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  // State values\n  constructor() {\n    super();\n    this.state = {\n      Daily: [{\n        task: 'Client call',\n        done: 1\n      },\n      {\n        task: 'Fill workday',\n        done: 0\n      },\n      {\n        task: 'Update Jira notes',\n        done: 1\n      }],\n      Development: [{\n        task: 'Learn CSS flexbox',\n        done: 1,\n      },\n      {\n        task: 'Learn how to cook',\n        done: 0\n      }],\n      HPC: [{\n        task: 'Update playbook',\n        done: 0\n      },\n      {\n        task: 'Prepare training',\n        done: 1\n      }]\n    };\n  }\n\n  addTaskDaily = () => {\n    let newList = this.state.Daily;\n    newList.push({\n      task: 'New Task...',\n      done: 0\n    });\n    this.setState({Daily: newList});\n  };\n\n  addTaskDevelopment = () => {\n    let newList = this.state.Development;\n    newList.push({\n      task: 'New Task...',\n      done: 0\n    });\n    this.setState({Development: newList});\n  };\n\n  addTaskHPC = () => {\n    let newList = this.state.HPC;\n    newList.push({\n      task: 'New Task...',\n      done: 0\n    });\n    this.setState({HPC: newList});\n  };\n\n  taskDoneDaily = (click) => {\n    let id = click.target.id;\n    let newListDaily = this.state.Daily;\n    if (newListDaily[id].done) {\n      newListDaily[id].done = 0;\n    } else {\n      newListDaily[id].done = 1;\n    }\n    this.setState({Daily: newListDaily})\n  }\n\n  taskDoneDevelopment = (click) => {\n    let id = click.target.id;\n    let newListDevelopment = this.state.Development;\n    if (newListDevelopment[id].done) {\n      newListDevelopment[id].done = 0;\n    } else {\n      newListDevelopment[id].done = 1;\n    }\n    this.setState({Development: newListDevelopment})\n  }\n\n  taskDoneHPC = (click) => {\n    let id = click.target.id;\n    let newListHPC = this.state.HPC;\n    if (newListHPC[id].done) {\n      newListHPC[id].done = 0;\n    } else {\n      newListHPC[id].done = 1;\n    }\n    this.setState({HPC: newListHPC})\n  }\n\n\n\n // Me trying to do stuff \n  render() {\n    return (\n      <div className=\"App\">\n        <AppHeader />\n        <div className=\"App_boxes\">\n          <Box name={'Daily'} click={this.addTaskDaily} list={this.state.Daily} click2={this.taskDoneDaily} />\n          <Box name={'Development'} click={this.addTaskDevelopment} list={this.state.Development} click2={this.taskDoneDevelopment} />\n          <Box name={'HPC'} click={this.addTaskHPC} list={this.state.HPC} click2={this.taskDoneHPC} />\n        </div>\n        <AppFooter />\n      </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}